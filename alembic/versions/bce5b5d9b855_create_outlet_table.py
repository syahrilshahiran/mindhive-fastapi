"""create outlet table

Revision ID: bce5b5d9b855
Revises: 
Create Date: 2025-07-05 23:45:53.421593

"""
from typing import Sequence, Union

from alembic import op
from pgvector.sqlalchemy import Vector
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bce5b5d9b855'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('outlets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('fax', sa.String(length=20), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('operating_hours', sa.JSON(), nullable=True),
    sa.Column('services', sa.JSON(), nullable=True),
    sa.Column('waze_link', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_geocoded', sa.Boolean(), nullable=True),
    sa.Column('geocoding_error', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_outlets_id'), 'outlets', ['id'], unique=False)
    op.create_index(op.f('ix_outlets_name'), 'outlets', ['name'], unique=False)
    op.create_table('outlet_proximities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('outlet_id', sa.Integer(), nullable=False),
    sa.Column('intersecting_outlet_id', sa.Integer(), nullable=False),
    sa.Column('distance_km', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['intersecting_outlet_id'], ['outlets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['outlet_id'], ['outlets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_outlet_proximities_id'), 'outlet_proximities', ['id'], unique=False)
    op.create_index(op.f('ix_outlet_proximities_intersecting_outlet_id'), 'outlet_proximities', ['intersecting_outlet_id'], unique=False)
    op.create_index(op.f('ix_outlet_proximities_outlet_id'), 'outlet_proximities', ['outlet_id'], unique=False)
    op.create_table('outlet_vectors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('outlet_id', sa.Integer(), nullable=False),
    sa.Column('embedding', Vector(dim=768), nullable=False),
    sa.Column('summary', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['outlet_id'], ['outlets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('outlet_id')
    )
    op.create_index(op.f('ix_outlet_vectors_id'), 'outlet_vectors', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_outlet_vectors_id'), table_name='outlet_vectors')
    op.drop_table('outlet_vectors')
    op.drop_index(op.f('ix_outlet_proximities_outlet_id'), table_name='outlet_proximities')
    op.drop_index(op.f('ix_outlet_proximities_intersecting_outlet_id'), table_name='outlet_proximities')
    op.drop_index(op.f('ix_outlet_proximities_id'), table_name='outlet_proximities')
    op.drop_table('outlet_proximities')
    op.drop_index(op.f('ix_outlets_name'), table_name='outlets')
    op.drop_index(op.f('ix_outlets_id'), table_name='outlets')
    op.drop_table('outlets')
    # ### end Alembic commands ###
